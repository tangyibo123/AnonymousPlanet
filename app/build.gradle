plugins {
    id 'com.android.application'
}

/**
 * 主 Model APP -> build.gradle
 * N 个副 Model -> build.gradle
 *
 * 1. 统一性
 * 2. 便于管理
 * 3. 版本管理
 *
 * Gradle 构建的三个性能指标：
 * -全量编译：全部编译-Open Project
 * -代码增量编译：修改了Java/kotlin下面的代码的时候编译
 * -资源增量编译：修改了res下面的资源的时候编译
 */
android {

    //调试
    if(rootProject.hasProperty('devBuild')){
        splits.abi.enable = false
        splits.density.enable = false
    }
    compileSdk rootProject.ext.android["compileSdkVersion"]

    defaultConfig {
        applicationId rootProject.ext.android["applicationId"]
        minSdk rootProject.ext.android["minSdk"]
        targetSdk rootProject.ext.android["targetSdk"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        debug {
            //自定义 Gradle 常量
            buildConfigField("boolean", "LOG_DEBUG", "true")
            buildConfigField("String", "LOG_TAG", "\"AnonymousPlanet\"")
            buildConfigField("String", "SP_NAME", "\"Config\"")
        }
        release {
            buildConfigField("boolean", "LOG_DEBUG", "false")
            buildConfigField("String", "LOG_TAG", "\"AnonymousPlanet\"")
            buildConfigField("String", "SP_NAME", "\"Config\"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    api 'cn.rongcloud.sdk:im_kit:5.1.3'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    //添加Framework依赖
    implementation project(path: ':framework')
}